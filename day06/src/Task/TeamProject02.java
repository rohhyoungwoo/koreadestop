package Task;

import java.util.Scanner;

public class TeamProject02 {
	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
//  공백(0100)                                                           
//  문제 1. 사용자가 입력한 숫자까지 구구단을 출력하는 프로그램
//     구구단은 1단부터 9단까지다.
//     사용자가 4를 입력할 경우 1단부터 4단까지 아래와 같은 형식으로 출력한다. 단은 \t로 구분한다.
//     (이중 for 문 사용, if 사용 X)
//
//  [입출력예시]
//  구구단을 어디까지 출력할까요? : 4
//  1 * 1 = 1   2 * 1 = 2   3 * 1 = 3   4 * 1 = 4   
//  1 * 2 = 2   2 * 2 = 4   3 * 2 = 6   4 * 2 = 8   
//  1 * 3 = 3   2 * 3 = 6   3 * 3 = 9   4 * 3 = 12   
//  1 * 4 = 4   2 * 4 = 8   3 * 4 = 12   4 * 4 = 16   
//  1 * 5 = 5   2 * 5 = 10   3 * 5 = 15   4 * 5 = 20   
//  1 * 6 = 6   2 * 6 = 12   3 * 6 = 18   4 * 6 = 24   
//  1 * 7 = 7   2 * 7 = 14   3 * 7 = 21   4 * 7 = 28   
//  1 * 8 = 8   2 * 8 = 16   3 * 8 = 24   4 * 8 = 32   
//  1 * 9 = 9   2 * 9 = 18   3 * 9 = 27   4 * 9 = 36

		// 로직구성
		// 1. 입력 클래스 import
		// 2. int 변수 선언
		// 3. 출력 메시지 "()단까지 구구단을 출력"
		// 4. 입력 메소드 sc.nextInt();
		// 4. 이중 for 문 사용
//  int num = 0;
//  System.out.println("구구단을 어디까지 출력할까요? : ");
//  num = sc.nextInt();
////  int result = (num * i);      
//  for (int i = 1; i <= 9; i++) {
//
//     for (int j = 1; j <= num; j++) {
//        System.out.printf("%d * %d = %d \t", j, i, (j * i));
//
//     }
//
//     System.out.println();
//  }

//  문제 2. UP&DOWN 게임
//     게임의 정답은 정해놓는다.
//     사용자에게 1 ~ 50까지의 정수를 입력 받고, 입력 받은 값이 정답보다 크면 "DOWN!"을 출력한다
//     정답보다 작으면 "UP"을 출력한다.
//     정답이 아닐 경우 "값을 다시 입력해 주세요 : " 를 출력한 후, 값을 다시 입력 받는다.
//     정답을 맞히면 "정답입니다 *번 째에 맞혔습니다!"를 출력하고 프로그램을 종료한다.
//     단, 1 ~ 50까지의 정수 범위를 벗어나면 "1 ~ 50까지의 숫자만 입력해주세요 : " 를 출력한다.
//
		// 로직구성
		// 1. 정답 상수 선언 1개 입력 변수 선언 1개
		// 2. 출력 메시지 " 정수 : "
		// 3. 입력메소드 sc.nextInt();
		// 4. while문, if문 사용
		// 5. while ( 상수 != 변수 ){
		// "값을 다시 입력해 주세요 : "출력
		// if(상수 < 변수){
		// "DOWN!" 출력
		// }else if(상수 > 변수){
		// "UP" 출력
		// }else if( 변수 == 0){
		// " 1 ~ 50까지의 숫자만 입력해주세요 : "
		// }else{
		// " 1 ~ 50까지의 숫자만 입력해주세요 : "
		// }
		// } "정답입니다 번 째에 맞혔습니다!" 출력

//  final int answer = 30;
//  int number = 0;
//  System.out.println("정수 입력 : ");
//  number = sc.nextInt();
//  while (answer != number) {
//     System.out.println("값을 다시 입력해 주세요 :");
//     number = sc.nextInt();
//     if (answer < number) {
//        System.out.println("DOWN!");
//     } else if (answer > number) {
//        System.out.println("UP");
//     } else if (number == 0) {
//        System.out.println("1 ~ 50까지의 숫자만 입력해주세요 :");
//     } else if(number > 50) {
//        System.out.println("1 ~ 50까지의 숫자만 입력해주세요 :");
//     }
//  }
//  System.out.println("정답입니다 ? 번 째에 맞혔습니다!");

//  ---------------------------------------------------------------------------------
//  JAV탕
//  문제1) 입력한 갯수만큼 늘어나는 반칸 다이아 만들기
//       *
//      * *   
//     * * *
//    * * * *
//   * * * * *    
//  * * * * * * 
//   * * * * *
//    * * * *
//     * * *
//      * *
//       *
//
		// 로직구성
		// 입력할 수 변수 선언 int
		// 입력메소드 sc.nextInt();
		// 중첩for문 사용
		int num = 0;
		num = sc.nextInt();
		for (int i = 1; i < num; i++) {
			for (int j = 1; j > 7 - i; j++) {
				System.out.print(" ");
				
				
//			System.out.println("*");
			}
		}

//  문제2) 금액을 넣어주세요 : 입력값
//     메뉴 출력 1~4번까지
//        1 콜라 : 2500
//        2 사이다 : 2000
//        3 커피 : 4000
//        4 잔액반환
//     거스름돈과 잔액부족 표시 출력하고
//     음료수가 나왔습니다 메시지 출력
//     음료수 갯수 n 개 표현
//     음료수 나오거나 잔액부족하면 종료시키기
//
//  ---------------------------------------------------------------
//  JAVA요
//  문제 1 : 점심 선택 및 가격 확인
//     사용자로부터 점심 메뉴를 입력받아 해당 메뉴와 가격을 출력하기
//     - 점심 메뉴 4가지에서만 가능하다
//        짜장 (5000원), 돈까스 (8000원), 피자 (25000원), 햄버거 (6000원)
//     - 올바른 메뉴를 입력할 때까지 반복합니다.
//     - 잘못된 메뉴를 입력하면 다시 입력받습니다.
//
//  문제 2 : 문자의 아스키코드 값 확인
//     사용자로부터 문자를 입력받아 아스키코드 값을 확인하고 입력받은 문자를 아스키코드 값으로 변환한다
//     사용자가 입력한 문자와 그 아스키코드를 출력하는데 반복문을 사용하여 여러번 입력받도록 한다
//     'A'를 입력하면 종료하고 종료 메시지를 출력한다
//
//  ---------------------------------------------------------------
//  I팀
//  1. 업다운문제
//     초기 숫자 상수로 정하고 숫자 3회 입력
//       > (상수 > 입력) : up 출력
//       > (상수 < 입력) : down 출력

		// 로직구성
		// 1. 입력 클래스 import
		// 2. 상수 1개 변수 1개 선언
		// 3. 출력 메시지 (초기 숫자 상수 : ,숫자 입력 :)
		// 4. 입력 메소드 sc.nextInt();
		// 5. for문, if문 사용해서 출력

//  final int NUM = 25;
//  int num1 = 0;
//  System.out.println("초기 숫자 상수 : " + NUM);
//
//  for (int i = 0; i < 3; i++) {
//     System.out.println("숫자 입력 : ");
//     num1 = sc.nextInt();
//
//     if (num1 < NUM) {
//
//        System.out.println("업");
//
//     } else if (num1 == NUM) {
//        System.out.println("정답입니다");
//        break;
//     } else {
//        System.out.println("다운");
//     }
//  }

//  2. OX 퀴즈 (2문제만 존재함) 
//     1번 못 맞추면 프로그램 종료
//           1번 맞추면 2번 문제로 넘어가기
//
//  1번문제) 아기화장품은 순해서 어른들이 사용해도 괜찮다? 정답 : X
//  2번문제) 독사가 자기 혀를 깨물면 죽는다? 정답 : O
//
//  (모든 문제를 맞춘 경우)
//  1번문제를 맞힐경우 정답입니다 2번문제로 넘어갑니다 출력
//  2번문제도 맞힐경우 정답입니다 모든 문제를 맞췄습니다. O/X 퀴즈가 종료됩니다. 출력 후 프로그램 종료
//
//  (1번문제를 틀린인 경우)
//  1번문제를 틀린경우 틀렸습니다. 출력 후 프로그램 종료(다음문제로 넘어가지 않음)

		// 로직구성
		// 1. String 변수 선언
		// 2. 1번 문제출력
		// 3. 정답 입력 메소드 sc.nextLine();
		// 4. do while 사용

//  String answer = "";
//  System.out.println("1번 문제) 아기화장품은 순해서 어른들이 사용해도 괜찮다? 정답 : ");
//  answer = sc.next();
//  if (answer.equals("X")) {
//     System.out.println("2번문제로 넘어갑니다");
//     System.out.println("2번문제) 독사가 자기 혀를 깨물면 죽는다? 정답 : ");
//     answer = sc.next();
//     if (answer.equals("O")) {
//        System.out.println("모든 문제를 맞췄습니다. O/X 퀴즈가 종료됩니다.");
//     } else {
//        System.out.println("2번 문제를 틀렸습니다.");
//     }
//
//  } else {
//
//     System.out.println("1번 문제를 틀렸습니다. 프로그램 종료");
//  }

//  -------------------------------------------------------------------
//  보안ER
//  1. 문자 추출 사각형 생성
//        문자열(3문자 이상)을 받아온다
//        문자열에서 3번재 위치한 문자로 5*5 크기의 사각형을 출력한다
//        [출력 예시]
//              문자열을 입력해 주세요 : hello
//              l l l l l 
//              l l l l l 
//              l l l l l 
//              l l l l l 
//              l l l l l
//
//  1-2(심화) 문자 추출 사각형 생성
//        문자열(3문자 이상)을 받아온다
//        문자열에서 3번재 위치한 문자로 5*5 크기의 가운데가 비어있는 사각형을 출력한다
//        [출력 예시]
//              문자열을 입력해 주세요 : hello
//              l l l l l 
//              l       l 
//              l       l 
//              l       l
//              l l l l l
//
//  2. 평균 성적, 평균 학점 계산
//    사용자로부터 3과목의 점수를 각각 입력받고 주어진 표에 맞게 계산하여 평균 학점과 평균 성적을 계산하시오
//    <표>
//      점수   ㅣ  등급  ㅣ    학점
//  ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
//     95-100 ㅣ   A+  ㅣ   (4.5)
//     90-94  ㅣ   A    ㅣ    (4.0)
//     85-89  ㅣ   B+  ㅣ    (3.5)
//     80-84  ㅣ   B    ㅣ    (3)
//     75-79  ㅣ   C+  ㅣ   (2.5)
//     75미만  ㅣ   F   ㅣ    (0)
//
//  [출력 예시1]
//  3과목의 성적을 입력해 주세요 : 90 89 98
//  평균 학점 : 4.0
//  평균 성적 : A
//
//  [출력 예시2]
//  3과목의 성적을 입력해 주세요 : 74 74 74
//  평균 학점 : 0.0
//  평균 성적 : F 

	}
}